{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-06-phonebook/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from'@reduxjs/toolkit';import{nanoid}from'nanoid';import{loadLocalStorage}from'../../utils/loadLocalStorage';var contactsSlice=createSlice({name:'contacts',initialState:{contacts:loadLocalStorage(),filter:''},reducers:{addContact:function addContact(state,action){var id=nanoid();var name=action.payload.name;var number=action.payload.number;var contactList=_toConsumableArray(state.contacts);if(contactList.findIndex(function(contact){return name===contact.name;})!==-1){alert(\"\".concat(name,\" is already in contacts.\"));}else{contactList.push({name:name,id:id,number:number});}state.contacts=contactList;},deleteContact:function deleteContact(state,action){var id=action.payload.id;state.contacts=state.contacts.filter(function(contact){return contact.id!==id;});}}});export default contactsSlice.reducer;var _contactsSlice$action=contactsSlice.actions,addContact=_contactsSlice$action.addContact,deleteContact=_contactsSlice$action.deleteContact;export{addContact,deleteContact};","map":{"version":3,"names":["createSlice","nanoid","loadLocalStorage","contactsSlice","name","initialState","contacts","filter","reducers","addContact","state","action","id","payload","number","contactList","_toConsumableArray","findIndex","contact","alert","concat","push","deleteContact","reducer","_contactsSlice$action","actions"],"sources":["C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-06-phonebook/src/redux/slices/contactsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\nimport { loadLocalStorage } from '../../utils/loadLocalStorage';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    contacts: loadLocalStorage(),\r\n    filter: '',\r\n  },\r\n  reducers: {\r\n    addContact: (state, action) => {\r\n      const id = nanoid();\r\n      const name = action.payload.name;\r\n      const number = action.payload.number;\r\n      const contactList = [...state.contacts];\r\n\r\n      if (\r\n        contactList.findIndex(\r\n          contact => name === contact.name\r\n        ) !== -1\r\n      ) {\r\n        alert(`${name} is already in contacts.`);\r\n      } else {\r\n        contactList.push({ name, id, number });\r\n      }\r\n      state.contacts = contactList;\r\n    },\r\n    deleteContact: (state, action) => {\r\n      const { id } = action.payload;\r\n      state.contacts = state.contacts.filter(\r\n        contact => contact.id !== id\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport default contactsSlice.reducer;\r\nexport const { addContact, deleteContact } =\r\n  contactsSlice.actions;"],"mappings":"6JAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,MAAM,KAAQ,QAAQ,CAC/B,OAASC,gBAAgB,KAAQ,8BAA8B,CAE/D,GAAM,CAAAC,aAAa,CAAGH,WAAW,CAAC,CAChCI,IAAI,CAAE,UAAU,CAChBC,YAAY,CAAE,CACZC,QAAQ,CAAEJ,gBAAgB,CAAC,CAAC,CAC5BK,MAAM,CAAE,EACV,CAAC,CACDC,QAAQ,CAAE,CACRC,UAAU,CAAE,SAAAA,WAACC,KAAK,CAAEC,MAAM,CAAK,CAC7B,GAAM,CAAAC,EAAE,CAAGX,MAAM,CAAC,CAAC,CACnB,GAAM,CAAAG,IAAI,CAAGO,MAAM,CAACE,OAAO,CAACT,IAAI,CAChC,GAAM,CAAAU,MAAM,CAAGH,MAAM,CAACE,OAAO,CAACC,MAAM,CACpC,GAAM,CAAAC,WAAW,CAAAC,kBAAA,CAAON,KAAK,CAACJ,QAAQ,CAAC,CAEvC,GACES,WAAW,CAACE,SAAS,CACnB,SAAAC,OAAO,QAAI,CAAAd,IAAI,GAAKc,OAAO,CAACd,IAAI,EAClC,CAAC,GAAK,CAAC,CAAC,CACR,CACAe,KAAK,IAAAC,MAAA,CAAIhB,IAAI,4BAA0B,CAAC,CAC1C,CAAC,IAAM,CACLW,WAAW,CAACM,IAAI,CAAC,CAAEjB,IAAI,CAAJA,IAAI,CAAEQ,EAAE,CAAFA,EAAE,CAAEE,MAAM,CAANA,MAAO,CAAC,CAAC,CACxC,CACAJ,KAAK,CAACJ,QAAQ,CAAGS,WAAW,CAC9B,CAAC,CACDO,aAAa,CAAE,SAAAA,cAACZ,KAAK,CAAEC,MAAM,CAAK,CAChC,GAAQ,CAAAC,EAAE,CAAKD,MAAM,CAACE,OAAO,CAArBD,EAAE,CACVF,KAAK,CAACJ,QAAQ,CAAGI,KAAK,CAACJ,QAAQ,CAACC,MAAM,CACpC,SAAAW,OAAO,QAAI,CAAAA,OAAO,CAACN,EAAE,GAAKA,EAAE,EAC9B,CAAC,CACH,CACF,CACF,CAAC,CAAC,CAEF,cAAe,CAAAT,aAAa,CAACoB,OAAO,CAC7B,IAAAC,qBAAA,CACLrB,aAAa,CAACsB,OAAO,CADRhB,UAAU,CAAAe,qBAAA,CAAVf,UAAU,CAAEa,aAAa,CAAAE,qBAAA,CAAbF,aAAa,CAChB,OAAAb,UAAA,CAAAa,aAAA"},"metadata":{},"sourceType":"module"}