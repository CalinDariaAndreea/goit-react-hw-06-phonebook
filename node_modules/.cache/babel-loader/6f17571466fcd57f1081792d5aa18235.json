{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yukina\\\\OneDrive\\\\Desktop\\\\git\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = _ref => {\n  _s();\n  let {\n    handleSubmit\n  } = _ref;\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleNameChange = e => {\n    const {\n      value\n    } = e.target;\n    setName(value);\n  };\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    handleSubmit({\n      name,\n      number\n    });\n    setName('');\n    setNumber('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: css.form,\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: css.formLabel,\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: css.formInput,\n      type: \"text\",\n      name: \"name\",\n      pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n      title: \"Name may contain only letters, apostrophe, dash, and spaces.\",\n      required: true,\n      placeholder: \"Enter name\",\n      value: name,\n      onChange: handleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: css.formLabel,\n      children: \"Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: css.formInput,\n      type: \"tel\",\n      name: \"number\",\n      pattern: \"[+]?[\\\\d\\\\s-()]{5,}\",\n      title: \"Phone number must be digits and can contain spaces, dashes, parentheses, and start with +\",\n      required: true,\n      placeholder: \"Enter phone number\",\n      value: number,\n      onChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: css.formBtn,\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"mgYk2feJE7Nd8w88JvjzPww6GtA=\");\n_c = ContactForm;\nContactForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["useState","PropTypes","css","jsxDEV","_jsxDEV","ContactForm","_ref","_s","handleSubmit","name","setName","number","setNumber","handleNameChange","e","value","target","handleNumberChange","handleFormSubmit","preventDefault","className","form","onSubmit","children","formLabel","fileName","_jsxFileName","lineNumber","columnNumber","formInput","type","pattern","title","required","placeholder","onChange","formBtn","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './ContactForm.module.css';\r\n\r\nexport const ContactForm = ({ handleSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleNameChange = (e) => {\r\n    const { value } = e.target;\r\n    setName(value);\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSubmit({ name, number });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={css.form} onSubmit={handleFormSubmit}>\r\n      <label className={css.formLabel}>Name</label>\r\n      <input\r\n        className={css.formInput}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash, and spaces.\"\r\n        required\r\n        placeholder=\"Enter name\"\r\n        value={name}\r\n        onChange={handleNameChange}\r\n      />\r\n      <label className={css.formLabel}>Number</label>\r\n      <input\r\n        className={css.formInput}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"[+]?[\\d\\s-()]{5,}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses, and start with +\"\r\n        required\r\n        placeholder=\"Enter phone number\"\r\n        value={number}\r\n        onChange={handleNumberChange}\r\n      />\r\n      <button className={css.formBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}