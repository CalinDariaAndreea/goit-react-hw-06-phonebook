{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport { loadLocalStorage } from '../../utils/loadLocalStorage';\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    contacts: loadLocalStorage(),\n    filter: ''\n  },\n  reducers: {\n    addContact: (state, action) => {\n      const id = nanoid();\n      const name = action.payload.name;\n      const number = action.payload.number;\n      const contactList = [...state.contacts];\n      if (contactList.findIndex(contact => name === contact.name) !== -1) {\n        alert(`${name} is already in contacts.`);\n      } else {\n        contactList.push({\n          name,\n          id,\n          number\n        });\n      }\n      state.contacts = contactList;\n    },\n    deleteContact: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      state.contacts = state.contacts.filter(contact => contact.id !== id);\n    }\n  }\n});\nexport default contactsSlice.reducer;\nexport const {\n  addContact,\n  deleteContact\n} = contactsSlice.actions;","map":{"version":3,"names":["createSlice","nanoid","loadLocalStorage","contactsSlice","name","initialState","contacts","filter","reducers","addContact","state","action","id","payload","number","contactList","findIndex","contact","alert","push","deleteContact","reducer","actions"],"sources":["C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-06-phonebook/src/redux/slices/contactsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\nimport { loadLocalStorage } from '../../utils/loadLocalStorage';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    contacts: loadLocalStorage(),\r\n    filter: '',\r\n  },\r\n  reducers: {\r\n    addContact: (state, action) => {\r\n      const id = nanoid();\r\n      const name = action.payload.name;\r\n      const number = action.payload.number;\r\n      const contactList = [...state.contacts];\r\n\r\n      if (\r\n        contactList.findIndex(\r\n          contact => name === contact.name\r\n        ) !== -1\r\n      ) {\r\n        alert(`${name} is already in contacts.`);\r\n      } else {\r\n        contactList.push({ name, id, number });\r\n      }\r\n      state.contacts = contactList;\r\n    },\r\n    deleteContact: (state, action) => {\r\n      const { id } = action.payload;\r\n      state.contacts = state.contacts.filter(\r\n        contact => contact.id !== id\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport default contactsSlice.reducer;\r\nexport const { addContact, deleteContact } =\r\n  contactsSlice.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,gBAAgB,QAAQ,8BAA8B;AAE/D,MAAMC,aAAa,GAAGH,WAAW,CAAC;EAChCI,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,QAAQ,EAAEJ,gBAAgB,CAAC,CAAC;IAC5BK,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMC,EAAE,GAAGX,MAAM,CAAC,CAAC;MACnB,MAAMG,IAAI,GAAGO,MAAM,CAACE,OAAO,CAACT,IAAI;MAChC,MAAMU,MAAM,GAAGH,MAAM,CAACE,OAAO,CAACC,MAAM;MACpC,MAAMC,WAAW,GAAG,CAAC,GAAGL,KAAK,CAACJ,QAAQ,CAAC;MAEvC,IACES,WAAW,CAACC,SAAS,CACnBC,OAAO,IAAIb,IAAI,KAAKa,OAAO,CAACb,IAC9B,CAAC,KAAK,CAAC,CAAC,EACR;QACAc,KAAK,CAAE,GAAEd,IAAK,0BAAyB,CAAC;MAC1C,CAAC,MAAM;QACLW,WAAW,CAACI,IAAI,CAAC;UAAEf,IAAI;UAAEQ,EAAE;UAAEE;QAAO,CAAC,CAAC;MACxC;MACAJ,KAAK,CAACJ,QAAQ,GAAGS,WAAW;IAC9B,CAAC;IACDK,aAAa,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAM;QAAEC;MAAG,CAAC,GAAGD,MAAM,CAACE,OAAO;MAC7BH,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACC,MAAM,CACpCU,OAAO,IAAIA,OAAO,CAACL,EAAE,KAAKA,EAC5B,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,eAAeT,aAAa,CAACkB,OAAO;AACpC,OAAO,MAAM;EAAEZ,UAAU;EAAEW;AAAc,CAAC,GACxCjB,aAAa,CAACmB,OAAO"},"metadata":{},"sourceType":"module"}